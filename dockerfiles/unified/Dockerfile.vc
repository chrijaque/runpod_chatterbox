# Unified Voice Cloning Dockerfile
# Supports both ChatterboxTTS and Higgs Audio models

FROM runpod/pytorch:2.8.0-py3.11-cuda12.8.1-cudnn-devel-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libsndfile1 \
    git \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements files
COPY requirements/chatterbox_only.txt /app/requirements_chatterbox.txt
COPY requirements/higgs_only.txt /app/requirements_higgs.txt

# Install system dependencies for audio processing
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libavcodec-extra \
    libavformat-dev \
    libavutil-dev \
    libswscale-dev \
    && rm -rf /var/lib/apt/lists/*

# Set git global config to avoid warnings
RUN git config --global --add safe.directory '*'

# Setup environment for huggingface
ENV HF_HOME=/root/.cache/huggingface

# Install base dependencies (common to both models)
RUN echo "üîß Installing base dependencies..." && \
    pip install --no-cache-dir runpod>=1.5.0 && \
    pip install --no-cache-dir firebase-admin>=6.2.0 google-cloud-storage>=2.10.0 && \
    pip install --no-cache-dir pydub==0.25.1 librosa>=0.10.0 soundfile>=0.12.0 && \
    pip install --no-cache-dir numpy>=1.21.0 scipy>=1.9.0 && \
    echo "üîß Installing compatible torchvision..." && \
    pip install torchvision==0.16.0 --index-url https://download.pytorch.org/whl/cu121

# Clone and install ChatterboxTTS from forked repository
RUN echo "üîß Cloning ChatterboxTTS repository..." && \
    git clone https://github.com/chrijaque/chatterbox_embed.git /workspace/chatterbox_embed && \
    echo "üîß Installing ChatterboxTTS dependencies..." && \
    pip install --no-cache-dir -r /app/requirements_chatterbox.txt && \
    echo "üîß Installing ChatterboxTTS in editable mode..." && \
    pip install -e /workspace/chatterbox_embed && \
    echo "üîç Verifying ChatterboxTTS installation..." && \
    python -c "import chatterbox; print('‚úÖ chatterbox imported from:', chatterbox.__file__)" && \
    echo "üîç Verifying PyTorch compatibility..." && \
    python -c "import torch; import torchvision; print(f'‚úÖ PyTorch: {torch.__version__}'); print(f'‚úÖ TorchVision: {torchvision.__version__}')"

# Clone and install Higgs Audio from forked repository
RUN echo "üîß Cloning Higgs Audio repository..." && \
    git clone https://github.com/chrijaque/higgs-audio.git /workspace/higgs-audio && \
    echo "üîß Installing Higgs Audio dependencies..." && \
    pip install --no-cache-dir -r /app/requirements_higgs.txt && \
    echo "üîß Installing Higgs Audio in editable mode..." && \
    pip install -e /workspace/higgs-audio && \
    echo "üîç Verifying Higgs Audio installation..." && \
    python -c "import boson_multimodal; print('‚úÖ boson_multimodal imported from:', boson_multimodal.__file__)" && \
    echo "üîç Verifying Higgs Audio components..." && \
    python -c "from boson_multimodal.serve.serve_engine import HiggsAudioServeEngine; print('‚úÖ HiggsAudioServeEngine imported successfully')"

# Copy model download script
COPY download_models.py /app/

# Download Higgs Audio models during build
RUN echo "üîß Downloading Higgs Audio models..." && \
    echo "üîß This may take a while (models are ~5.77 GB)..." && \
    python /app/download_models.py && \
    echo "‚úÖ Higgs Audio models downloaded successfully"

# Install NLTK data
RUN python -c "import nltk; nltk.download('punkt')"

# Create directories for both models
RUN mkdir -p /app/handlers/chatterbox \
    && mkdir -p /app/handlers/higgs \
    && mkdir -p /voice_profiles \
    && mkdir -p /voice_samples \
    && mkdir -p /temp_voice

# Copy handlers
COPY handlers/chatterbox/vc_handler.py /app/handlers/chatterbox/
COPY handlers/higgs/vc_handler.py /app/handlers/higgs/

# Create a unified handler that can switch between models
COPY handlers/unified_vc_handler.py /app/

# Copy verification scripts
COPY verify_unified_installation.py /app/
COPY quick_check.py /app/
COPY fix_dependencies.py /app/

# Set the default handler
ENV HANDLER_PATH=/app/unified_vc_handler.py

# Expose port (if needed for debugging)
EXPOSE 8000

# Default command
CMD ["python", "/app/unified_vc_handler.py"] 