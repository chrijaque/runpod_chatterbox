# Lightweight Dockerfile for Unified VC Handler with Network Volume
FROM runpod/pytorch:2.8.0-py3.11-cuda12.8.1-cudnn-devel-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libsndfile1 \
    git \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy lightweight requirements
COPY requirements/lightweight.txt /app/requirements.txt

# Install system dependencies for audio processing
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libavcodec-extra \
    libavformat-dev \
    libavutil-dev \
    libswscale-dev \
    && rm -rf /var/lib/apt/lists/*

# Set git global config to avoid warnings
RUN git config --global --add safe.directory '*'

# Setup environment for huggingface (network volume for Higgs, local for ChatterboxTTS)
ENV HF_HOME=/app/models
ENV TRANSFORMERS_CACHE=/app/models
ENV HUGGINGFACE_HUB_CACHE=/app/models

# Install Python dependencies
RUN echo "🔧 Installing lightweight Python dependencies..." && \
    pip install --no-cache-dir -r requirements.txt && \
    echo "🔧 Installing compatible torchvision..." && \
    pip install torchvision==0.16.0 --index-url https://download.pytorch.org/whl/cu121

# Clone and install ChatterboxTTS from forked repository
RUN echo "🔧 Cloning ChatterboxTTS repository..." && \
    git clone https://github.com/chrijaque/chatterbox_embed.git /workspace/chatterbox_embed && \
    echo "🔧 Installing ChatterboxTTS in editable mode..." && \
    pip install -e /workspace/chatterbox_embed && \
    echo "🔍 Verifying ChatterboxTTS installation..." && \
    python -c "import chatterbox; print('✅ chatterbox imported from:', chatterbox.__file__)"

# Pre-download ChatterboxTTS models during build
RUN echo "🔧 Pre-downloading ChatterboxTTS models..." && \
    mkdir -p /app/models && \
    python -c "from chatterbox.tts import ChatterboxTTS; print('✅ ChatterboxTTS models downloaded')" && \
    echo "✅ ChatterboxTTS models pre-loaded"

# Clone and install Higgs Audio from forked repository
RUN echo "🔧 Cloning Higgs Audio repository..." && \
    git clone https://github.com/chrijaque/higgs-audio.git /workspace/higgs-audio && \
    echo "🔧 Installing Higgs Audio requirements..." && \
    pip install -r /workspace/higgs-audio/requirements.txt && \
    echo "🔧 Installing descript-audio-codec with compatible protobuf..." && \
    pip install --no-cache-dir "protobuf>=3.9.2,<3.20" && \
    pip install --no-cache-dir descript-audio-codec && \
    echo "🔧 Installing Higgs Audio in editable mode..." && \
    pip install -e /workspace/higgs-audio && \
    echo "🔍 Verifying Higgs Audio installation..." && \
    python -c "import boson_multimodal; print('✅ boson_multimodal imported from:', boson_multimodal.__file__)" && \
    echo "🔍 Verifying Higgs Audio components..." && \
    python -c "from boson_multimodal.serve.serve_engine import HiggsAudioServeEngine; print('✅ HiggsAudioServeEngine imported successfully')"

# Note: Higgs Audio models will be mounted from network volume at runtime
RUN echo "🔧 Lightweight image - Higgs models will be mounted from network volume"

# Install NLTK data
RUN python -c "import nltk; nltk.download('punkt')"

# Create directories for both models
RUN mkdir -p /app/handlers/chatterbox \
    && mkdir -p /app/handlers/higgs \
    && mkdir -p /voice_profiles \
    && mkdir -p /voice_samples \
    && mkdir -p /temp_voice

# Copy handlers
COPY handlers/chatterbox/vc_handler.py /app/handlers/chatterbox/
COPY handlers/higgs/vc_handler.py /app/handlers/higgs/

# Copy unified handler
COPY handlers/unified_vc_handler.py /app/

# Copy verification scripts
COPY verify_unified_installation.py /app/
COPY quick_check.py /app/
COPY fix_dependencies.py /app/

# Set the default handler
ENV HANDLER_PATH=/app/unified_vc_handler.py

# Expose port (if needed for debugging)
EXPOSE 8000

# Default command
CMD ["python", "/app/unified_vc_handler.py"] 