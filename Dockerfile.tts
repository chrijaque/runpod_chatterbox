# Build cache buster - change this to force rebuild
ARG BUILD_DATE=2025-07-23
FROM runpod/pytorch:2.8.0-py3.11-cuda12.8.1-cudnn-devel-ubuntu22.04

# Set environment variables
ENV PYTHONUNBUFFERED=1

# Copy requirements first for better caching
COPY requirements.txt /requirements.txt

# Install Python dependencies with verbose pip output

# Debug: Show what's in requirements.txt
RUN echo "📋 Contents of requirements.txt:" && cat requirements.txt

# Install forked repository FIRST to prevent dependency conflicts
RUN echo "🔧 Installing forked repository..." && \
    pip install --no-cache-dir --use-pep517 git+https://github.com/chrijaque/chatterbox_embed.git#egg=chatterbox-tts

# Debug: Check which repository was installed
RUN echo "🔍 Checking installed repository..." && \
    python -c "import chatterbox; print('📦 chatterbox module path:', chatterbox.__file__)" && \
    python -c "import chatterbox; import os; repo_path = os.path.dirname(chatterbox.__file__); print('📁 chatterbox directory:', repo_path)" && \
    python -c "import chatterbox; import os; repo_path = os.path.dirname(chatterbox.__file__); git_path = os.path.join(repo_path, '.git'); print('🔍 .git exists:', os.path.exists(git_path))" && \
    pip show chatterbox-tts

# Install other requirements (excluding chatterbox-tts since it's already installed)
RUN echo "🔧 Installing other requirements..." && \
    pip install -v -r requirements.txt --no-deps

# Copy TTS handler files
COPY tts_handler.py /
COPY download_model.py /

# Create required directories
RUN mkdir -p /voice_profiles /tts_generated /temp_voice

# Download and verify model with detailed error reporting
RUN python3 -u download_model.py 2>&1

# Final verification after all installations
RUN echo "🔍 Final verification after all installations..." && \
    python -c "import chatterbox; print('📦 FINAL chatterbox module path:', chatterbox.__file__)" && \
    python -c "import chatterbox; import os; repo_path = os.path.dirname(chatterbox.__file__); print('📁 FINAL chatterbox directory:', repo_path)" && \
    python -c "import chatterbox; import os; repo_path = os.path.dirname(chatterbox.__file__); git_path = os.path.join(repo_path, '.git'); print('🔍 FINAL .git exists:', os.path.exists(git_path))" && \
    pip show chatterbox-tts

# Expose port (if needed for health checks)
EXPOSE 8000

# Set the entrypoint to the TTS handler
CMD ["python3", "-u", "tts_handler.py"] 