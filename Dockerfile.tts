FROM runpod/pytorch:2.8.0-py3.11-cuda12.8.1-cudnn-devel-ubuntu22.04

# Set environment variables
ENV PYTHONUNBUFFERED=1

# Copy requirements first for better caching
COPY requirements.txt /requirements.txt

# Install Python dependencies with verbose pip output

# Debug: Show what's in requirements.txt
RUN echo "📋 Contents of requirements.txt:" && cat requirements.txt

# Install with extra verbose output and check chatterbox installation
# Force reinstall chatterbox from git to prevent PyPI version
RUN pip install -v -r requirements.txt && \
    pip uninstall -y chatterbox-tts && \
    pip install -v git+https://github.com/chrijaque/chatterbox_embed.git#egg=chatterbox-tts

# Debug: Check which chatterbox is installed
RUN echo "🔍 Checking chatterbox installation:" && \
    python -c "import chatterbox; print(f'📦 chatterbox module path: {chatterbox.__file__}')" && \
    python -c "import chatterbox; import os; repo_path = os.path.dirname(chatterbox.__file__); print(f'📁 chatterbox directory: {repo_path}')" && \
    python -c "import chatterbox; import os; repo_path = os.path.dirname(chatterbox.__file__); git_path = os.path.join(repo_path, '.git'); print(f'🔍 .git exists: {os.path.exists(git_path)}')" && \
    python -c "import chatterbox; print(f'📋 chatterbox version: {getattr(chatterbox, \"__version__\", \"Unknown\")}')" && \
    python -c "from chatterbox.tts import ChatterboxTTS; model = ChatterboxTTS.from_pretrained(device='cpu'); print(f'✅ Model loaded successfully'); print(f'🔍 Available methods: {[m for m in dir(model) if \"voice\" in m.lower() or \"profile\" in m.lower()]}')"

# Copy TTS handler files
COPY tts_handler.py /
COPY download_model.py /

# Create required directories
RUN mkdir -p /voice_profiles /tts_generated /temp_voice

# Download and verify model with detailed error reporting
RUN python3 -u download_model.py 2>&1

# Expose port (if needed for health checks)
EXPOSE 8000

# Set the entrypoint to the TTS handler
CMD ["python3", "-u", "tts_handler.py"] 